/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package excerciseone.GUI;

import excerciseone.BLL.Frm0002BLL;
import excerciseone.BLL.Common;
import excerciseone.DAL.FileDAL;
import excerciseone.DTO.AccountSchoolDTO;
import excerciseone.DTO.ClassRoomDTO;
import excerciseone.DTO.StudentsDTO;
import excerciseone.DTO.SubjectsDTO;
import excerciseone.DTO.SubjectsWithClassroomDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author peter
 */
public class frm0002 extends javax.swing.JFrame {
    
    private AccountSchoolDTO accurent;
    
    /**
     * Creates new form frm0002
     */
    public frm0002() {
        initComponents();
        createContent();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRoot = new javax.swing.JPanel();
        timecurrents = new javax.swing.JLabel();
        btnchangepass = new javax.swing.JButton();
        btnlogout = new javax.swing.JButton();
        username = new javax.swing.JLabel();
        jpannelviewstudentclass = new javax.swing.JPanel();
        labelviewstudentclass = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DefaultTableModel modeltablestudentclass= new DefaultTableModel(){
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };
        modeltablestudentclass.addColumn("STT");
        modeltablestudentclass.addColumn("MSSV");
        modeltablestudentclass.addColumn("FULL NAME");
        modeltablestudentclass.addColumn("SEX");
        modeltablestudentclass.addColumn("IDENTITY");
        tablestudentclass = new javax.swing.JTable(modeltablestudentclass);
        cbxstudentclass = new javax.swing.JComboBox<>();
        jpannelviewscheduleclass = new javax.swing.JPanel();
        labelviewscheduleclass = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DefaultTableModel modeltablescheduleclass= new DefaultTableModel(){
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };

        modeltablescheduleclass.addColumn("STT");
        modeltablescheduleclass.addColumn("CODE SUBJECT");
        modeltablescheduleclass.addColumn("NAME SUBJECT");
        modeltablescheduleclass.addColumn("ROOM");
        tablescheduleclass = new javax.swing.JTable(modeltablescheduleclass);
        cbxscheduleclass = new javax.swing.JComboBox<>();
        jpannelviewpointsubject = new javax.swing.JPanel();
        labelviewpointsubject = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DefaultTableModel modeltablepointsubject= new DefaultTableModel(){
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };
        modeltablepointsubject.addColumn("STT");
        modeltablepointsubject.addColumn("MSSV");
        modeltablepointsubject.addColumn("FULL NAME");
        modeltablepointsubject.addColumn("POINT MID");
        modeltablepointsubject.addColumn("POINT FINAL");
        modeltablepointsubject.addColumn("POINT DIFFERENCE");
        modeltablepointsubject.addColumn("POINT SUMMARY");
        tablepointsubject = new javax.swing.JTable(modeltablepointsubject);
        cbxpointsubject = new javax.swing.JComboBox<>();
        labelsubjpoint = new javax.swing.JLabel();
        jpannelviewstudentsubject = new javax.swing.JPanel();
        labelviewstudentsubject = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DefaultTableModel modeltablestudentsubject= new DefaultTableModel(){
            public boolean isCellEditable(int row, int col){
                return false;
            }
        };
        modeltablestudentsubject.addColumn("STT");
        modeltablestudentsubject.addColumn("MSSV");
        modeltablestudentsubject.addColumn("FULL NAME");
        modeltablestudentsubject.addColumn("SEX");
        modeltablestudentsubject.addColumn("IDENTITY");
        tablestudentsubject = new javax.swing.JTable(modeltablestudentsubject);
        cbxstudentsubject = new javax.swing.JComboBox<>();
        labelsubjectstudensuject = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        importStudent = new javax.swing.JMenuItem();
        importschedules = new javax.swing.JMenuItem();
        importpoint = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        managestudentclass = new javax.swing.JMenuItem();
        managastudentsubject = new javax.swing.JMenuItem();
        managapointstudent = new javax.swing.JMenuItem();
        View = new javax.swing.JMenu();
        viewstudentclass = new javax.swing.JMenuItem();
        viewscheduleclass = new javax.swing.JMenuItem();
        viewstudentsubject = new javax.swing.JMenuItem();
        viewpointsubject = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Management Student");
        setLocation(new java.awt.Point(150, 50));
        setPreferredSize(new java.awt.Dimension(1024, 600));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanelRoot.setBackground(new java.awt.Color(129, 211, 227));
        jPanelRoot.setPreferredSize(new java.awt.Dimension(1024, 600));

        timecurrents.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        timecurrents.setText("0000-00-00 00:00:00 ");

        btnchangepass.setBackground(new java.awt.Color(220, 204, 96));
        btnchangepass.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        btnchangepass.setText("Change password");
        btnchangepass.setName("btnchangepass"); // NOI18N
        btnchangepass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnchangepassMouseClicked(evt);
            }
        });

        btnlogout.setBackground(new java.awt.Color(124, 121, 102));
        btnlogout.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        btnlogout.setText("Logout");
        btnlogout.setName("btnchangepass"); // NOI18N
        btnlogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnlogoutMousePressed(evt);
            }
        });

        username.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        username.setForeground(new java.awt.Color(195, 37, 39));
        username.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/support(2).png"))); // NOI18N
        username.setText("Name");

        jpannelviewstudentclass.setBackground(new java.awt.Color(129, 211, 227));
        jpannelviewstudentclass.setPreferredSize(new java.awt.Dimension(1024, 500));

        labelviewstudentclass.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelviewstudentclass.setText("All Students Class:");

        tablestudentclass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablestudentclassMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablestudentclass);

        cbxstudentclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxstudentclass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxstudentclassItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpannelviewstudentclassLayout = new javax.swing.GroupLayout(jpannelviewstudentclass);
        jpannelviewstudentclass.setLayout(jpannelviewstudentclassLayout);
        jpannelviewstudentclassLayout.setHorizontalGroup(
            jpannelviewstudentclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpannelviewstudentclassLayout.createSequentialGroup()
                .addComponent(labelviewstudentclass, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(cbxstudentclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        jpannelviewstudentclassLayout.setVerticalGroup(
            jpannelviewstudentclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpannelviewstudentclassLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpannelviewstudentclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelviewstudentclass)
                    .addComponent(cbxstudentclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );

        jpannelviewscheduleclass.setBackground(new java.awt.Color(129, 211, 227));
        jpannelviewscheduleclass.setPreferredSize(new java.awt.Dimension(1024, 500));

        labelviewscheduleclass.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelviewscheduleclass.setText("Schedule Class:");

        jScrollPane3.setViewportView(tablescheduleclass);

        cbxscheduleclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxscheduleclass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxscheduleclassItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpannelviewscheduleclassLayout = new javax.swing.GroupLayout(jpannelviewscheduleclass);
        jpannelviewscheduleclass.setLayout(jpannelviewscheduleclassLayout);
        jpannelviewscheduleclassLayout.setHorizontalGroup(
            jpannelviewscheduleclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpannelviewscheduleclassLayout.createSequentialGroup()
                .addComponent(labelviewscheduleclass, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(cbxscheduleclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        jpannelviewscheduleclassLayout.setVerticalGroup(
            jpannelviewscheduleclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpannelviewscheduleclassLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpannelviewscheduleclassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelviewscheduleclass)
                    .addComponent(cbxscheduleclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
        );

        jpannelviewpointsubject.setBackground(new java.awt.Color(129, 211, 227));
        jpannelviewpointsubject.setPreferredSize(new java.awt.Dimension(1024, 500));

        labelviewpointsubject.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelviewpointsubject.setText("Point of Subject: ");

        jScrollPane4.setViewportView(tablepointsubject);

        cbxpointsubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxpointsubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxpointsubjectItemStateChanged(evt);
            }
        });

        labelsubjpoint.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelsubjpoint.setText("Point of Subject: ");

        javax.swing.GroupLayout jpannelviewpointsubjectLayout = new javax.swing.GroupLayout(jpannelviewpointsubject);
        jpannelviewpointsubject.setLayout(jpannelviewpointsubjectLayout);
        jpannelviewpointsubjectLayout.setHorizontalGroup(
            jpannelviewpointsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpannelviewpointsubjectLayout.createSequentialGroup()
                .addComponent(labelviewpointsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(cbxpointsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelsubjpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        jpannelviewpointsubjectLayout.setVerticalGroup(
            jpannelviewpointsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpannelviewpointsubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpannelviewpointsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelviewpointsubject)
                    .addComponent(cbxpointsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelsubjpoint))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
        );

        jpannelviewstudentsubject.setBackground(new java.awt.Color(129, 211, 227));
        jpannelviewstudentsubject.setPreferredSize(new java.awt.Dimension(1024, 500));

        labelviewstudentsubject.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelviewstudentsubject.setText("All Student of subject:");

        jScrollPane5.setViewportView(tablestudentsubject);

        cbxstudentsubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxstudentsubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxstudentsubjectItemStateChanged(evt);
            }
        });

        labelsubjectstudensuject.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        labelsubjectstudensuject.setText("All Student of subject:");

        javax.swing.GroupLayout jpannelviewstudentsubjectLayout = new javax.swing.GroupLayout(jpannelviewstudentsubject);
        jpannelviewstudentsubject.setLayout(jpannelviewstudentsubjectLayout);
        jpannelviewstudentsubjectLayout.setHorizontalGroup(
            jpannelviewstudentsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpannelviewstudentsubjectLayout.createSequentialGroup()
                .addComponent(labelviewstudentsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(cbxstudentsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelsubjectstudensuject, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        jpannelviewstudentsubjectLayout.setVerticalGroup(
            jpannelviewstudentsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpannelviewstudentsubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpannelviewstudentsubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelviewstudentsubject)
                    .addComponent(cbxstudentsubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelsubjectstudensuject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelRootLayout = new javax.swing.GroupLayout(jPanelRoot);
        jPanelRoot.setLayout(jPanelRootLayout);
        jPanelRootLayout.setHorizontalGroup(
            jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRootLayout.createSequentialGroup()
                .addContainerGap(476, Short.MAX_VALUE)
                .addComponent(username)
                .addGap(82, 82, 82)
                .addComponent(timecurrents)
                .addGap(18, 18, 18)
                .addComponent(btnchangepass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnlogout)
                .addContainerGap())
            .addComponent(jpannelviewstudentclass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelRootLayout.createSequentialGroup()
                    .addComponent(jpannelviewscheduleclass, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpannelviewpointsubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpannelviewstudentsubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelRootLayout.setVerticalGroup(
            jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRootLayout.createSequentialGroup()
                .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlogout)
                    .addComponent(btnchangepass)
                    .addComponent(username)
                    .addComponent(timecurrents))
                .addGap(18, 18, 18)
                .addComponent(jpannelviewstudentclass, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE))
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRootLayout.createSequentialGroup()
                    .addGap(0, 46, Short.MAX_VALUE)
                    .addComponent(jpannelviewscheduleclass, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRootLayout.createSequentialGroup()
                    .addGap(0, 44, Short.MAX_VALUE)
                    .addComponent(jpannelviewpointsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanelRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRootLayout.createSequentialGroup()
                    .addGap(0, 49, Short.MAX_VALUE)
                    .addComponent(jpannelviewstudentsubject, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jMenuBar1.setBackground(new java.awt.Color(79, 142, 163));
        jMenuBar1.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N

        File.setBackground(new java.awt.Color(79, 142, 163));
        File.setText("File");
        File.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N

        importStudent.setBackground(new java.awt.Color(79, 142, 163));
        importStudent.setText("Import Students Class");
        importStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importStudentActionPerformed(evt);
            }
        });
        File.add(importStudent);

        importschedules.setBackground(new java.awt.Color(79, 142, 163));
        importschedules.setText("Import Shedules Class");
        importschedules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importschedulesActionPerformed(evt);
            }
        });
        File.add(importschedules);

        importpoint.setText("Import Point Subject");
        File.add(importpoint);

        jMenuBar1.add(File);

        Edit.setBackground(new java.awt.Color(79, 142, 163));
        Edit.setText("Edit");
        Edit.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N

        managestudentclass.setText("Manage Students Class");
        managestudentclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managestudentclassActionPerformed(evt);
            }
        });
        Edit.add(managestudentclass);

        managastudentsubject.setText("Manage Student Subject");
        Edit.add(managastudentsubject);

        managapointstudent.setText("Manage Point Student");
        Edit.add(managapointstudent);

        jMenuBar1.add(Edit);

        View.setBackground(new java.awt.Color(79, 142, 163));
        View.setText("View");
        View.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N

        viewstudentclass.setBackground(new java.awt.Color(79, 142, 163));
        viewstudentclass.setText("View Students Class");
        viewstudentclass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewstudentclassMouseClicked(evt);
            }
        });
        viewstudentclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewstudentclassActionPerformed(evt);
            }
        });
        View.add(viewstudentclass);

        viewscheduleclass.setBackground(new java.awt.Color(79, 142, 163));
        viewscheduleclass.setText("View Schedules Class");
        viewscheduleclass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewscheduleclassMouseClicked(evt);
            }
        });
        viewscheduleclass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewscheduleclassActionPerformed(evt);
            }
        });
        View.add(viewscheduleclass);

        viewstudentsubject.setText("View Students Subject");
        viewstudentsubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewstudentsubjectActionPerformed(evt);
            }
        });
        View.add(viewstudentsubject);

        viewpointsubject.setText("View Point Subject");
        viewpointsubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewpointsubjectMouseClicked(evt);
            }
        });
        viewpointsubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewpointsubjectActionPerformed(evt);
            }
        });
        View.add(viewpointsubject);

        jMenuBar1.add(View);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelRoot, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated


            // TODO add your handling code here:
            Common com= new Common();
            ActionListener updateClockAction = new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        timecurrents.setText(com.getTimeCurrent());
                      }
            };
            Timer t = new Timer(1000, updateClockAction);
            t.start();
            
            username.setText(accurent.getNameshow());
            
//            Thread abc= new Thread(new Runnable() {
//                @Override
//                public void run() {
//                        timecurrents.setText(com.getTimeCurrent());             
//                }
//            });
//            while(true){
//                abc.start();
//                try {
//                    Thread.sleep(1000);
//                } catch (InterruptedException ex) {
//                    Logger.getLogger(frm0003.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
                     
            
    }//GEN-LAST:event_formWindowActivated

    private void btnlogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnlogoutMousePressed
        // TODO add your handling code here:
        this.setEnabled(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frmlogout frmlogout= new frmlogout();
        frmlogout.setVisible(true);
        frmlogout.setAlwaysOnTop(true);
        frmlogout.setAccountSchool(accurent);
        frmlogout.setFrm0002s(this);
    }//GEN-LAST:event_btnlogoutMousePressed

    private void btnchangepassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnchangepassMouseClicked
        // TODO add your handling code here:
        this.setEnabled(false);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frmchangepassword frmchange= new frmchangepassword();
        frmchange.setVisible(true);
        frmchange.setAlwaysOnTop(true);
        frmchange.setAccountschool(accurent);
        frmchange.setFrm0002s(this);
    }//GEN-LAST:event_btnchangepassMouseClicked

    private void viewstudentclassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewstudentclassMouseClicked
        // TODO add your handling code here    
    }//GEN-LAST:event_viewstudentclassMouseClicked

    private void viewscheduleclassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewscheduleclassMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_viewscheduleclassMouseClicked

    private void viewpointsubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewpointsubjectMouseClicked
        // TODO add your handling code here:
//         createCombox();
//        jpannelviewpointsubject.setVisible(true);
//        jpannelviewscheduleclass.setVisible(false);
//        jpannelviewstudentclass.setVisible(false);
//        jpannelviewstudentsubject.setVisible(false);
    }//GEN-LAST:event_viewpointsubjectMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
          
        jpannelviewpointsubject.setVisible(false);
        jpannelviewscheduleclass.setVisible(false);
        jpannelviewstudentclass.setVisible(false);
        jpannelviewstudentsubject.setVisible(false);
    }//GEN-LAST:event_formComponentShown

    private void importStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importStudentActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooserImport= new JFileChooser();
        jFileChooserImport.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooserImport.addChoosableFileFilter(FileDAL.myFileFilter());
        jFileChooserImport.setAcceptAllFileFilterUsed(true);
        jFileChooserImport.setApproveButtonText("Open");
        int status = jFileChooserImport.showSaveDialog(jFileChooserImport);
        
        boolean statusimporterr=false;
        if (status == JFileChooser.APPROVE_OPTION) {
          File selectedFile = jFileChooserImport.getSelectedFile();
          System.out.println(selectedFile.getPath());
          if(!selectedFile.getName().contains(".csv")){
               //error
               frmerror er= new frmerror();
               er.setStrError(" Has Error when import Students CLass !");
               er.setVisible(true);
               return ;
           }
           Frm0002BLL bll0002= new Frm0002BLL();
           statusimporterr =bll0002.importStudentsClass(selectedFile.getPath());
           if(statusimporterr){
               //error
               frmerror er= new frmerror();
               er.setStrError(" Has Error when import Students CLass !");
               er.setVisible(true);
           }else{
               // view student class
               Frm0002BLL frm0002bll = new Frm0002BLL();
               Iterator<ClassRoomDTO> in= Frm0002BLL.getColClassRoom().iterator();
               cbxstudentclass.removeAllItems();
               while(in.hasNext()){
                    ClassRoomDTO ob=in.next();                   
                    getIntoTableStudentClass(ob.getCollectionSTU());
                    cbxstudentclass.addItem(ob.getNameroom());
               }
               //All Students Class:
               labelviewstudentclass.setText("Students is Imported:");
                 jScrollPane2.getVerticalScrollBar().setValue(0);
                    jpannelviewpointsubject.setVisible(false);
                    jpannelviewscheduleclass.setVisible(false);
                    jpannelviewstudentclass.setVisible(true);
                    jpannelviewstudentsubject.setVisible(false);
           }
        } else if (status == JFileChooser.CANCEL_OPTION) {
            jFileChooserImport.cancelSelection();
        }
    }//GEN-LAST:event_importStudentActionPerformed

    private void cbxstudentclassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxstudentclassItemStateChanged
        // TODO add your handling code here:
        if(cbxstudentclass.getSelectedItem() !=  null){
            String nameclass=cbxstudentclass.getSelectedItem().toString();
            Iterator<ClassRoomDTO> in= Frm0002BLL.getColClassRoom().iterator();
            while(in.hasNext()){
                ClassRoomDTO ob=in.next(); 
                if(ob.getNameroom().equals(nameclass)){
                   getIntoTableStudentClass(ob.getCollectionSTU());
                   jScrollPane2.getVerticalScrollBar().setValue(0);
                }
            }
        }
        
    }//GEN-LAST:event_cbxstudentclassItemStateChanged

    private void cbxscheduleclassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxscheduleclassItemStateChanged
        // TODO add your handling code here:
        if(cbxscheduleclass.getSelectedItem() !=  null){
            String nameclass=cbxscheduleclass.getSelectedItem().toString();
            Iterator<ClassRoomDTO> in= Frm0002BLL.getColClassRoom().iterator();
            while(in.hasNext()){
                ClassRoomDTO ob=in.next(); 
                if(ob.getNameroom().equals(nameclass)){
                   getIntoTableScheduleClass(ob.getCollectionSUB());
                }
            }
        }
    }//GEN-LAST:event_cbxscheduleclassItemStateChanged

    private void viewstudentclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewstudentclassActionPerformed
        // TODO add your handling code here:
         createCombox();
         labelviewstudentclass.setText("All Students Class:");
        jpannelviewpointsubject.setVisible(false);
        jpannelviewscheduleclass.setVisible(false);
        jpannelviewstudentclass.setVisible(true);
        jpannelviewstudentsubject.setVisible(false);
    }//GEN-LAST:event_viewstudentclassActionPerformed

    private void viewscheduleclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewscheduleclassActionPerformed
        // TODO add your handling code here:
        createCombox();
        labelviewscheduleclass.setText("SChedule Of Class:");
        jpannelviewpointsubject.setVisible(false);
        jpannelviewscheduleclass.setVisible(true);
        jpannelviewstudentclass.setVisible(false);
        jpannelviewstudentsubject.setVisible(false);
    }//GEN-LAST:event_viewscheduleclassActionPerformed

    private void viewstudentsubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewstudentsubjectActionPerformed
        // TODO add your handling code here:
        createCombox();
        labelsubjectstudensuject.setVisible(true);
        jpannelviewpointsubject.setVisible(false);
        jpannelviewscheduleclass.setVisible(false);
        jpannelviewstudentclass.setVisible(false);
        jpannelviewstudentsubject.setVisible(true);
    }//GEN-LAST:event_viewstudentsubjectActionPerformed

    private void viewpointsubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewpointsubjectActionPerformed
        // TODO add your handling code here:
         createCombox();
         labelsubjpoint.setVisible(true);
        jpannelviewpointsubject.setVisible(true);
        jpannelviewscheduleclass.setVisible(false);
        jpannelviewstudentclass.setVisible(false);
        jpannelviewstudentsubject.setVisible(false);
    }//GEN-LAST:event_viewpointsubjectActionPerformed

    
    private void managestudentclassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managestudentclassActionPerformed
        // TODO add your handling code here:
        frmaddstudents addstudent=new frmaddstudents();
        
        Frm0002BLL.getAllClassRoom();
        LinkedList<ClassRoomDTO> colcr=Frm0002BLL.getColClassRoom();
        Iterator<ClassRoomDTO> in=colcr.iterator();
        Map<String,String> col=new HashMap<>();
        while(in.hasNext()){
            ClassRoomDTO i= in.next();
            Collections.sort(i.getCollectionSTU());
            long l=Long.valueOf(i.getCollectionSTU().getLast().getMssv()) +1;
            col.put(i.getNameroom(), String.valueOf(l));
        }
        addstudent.setMapmaxmssvclass(col);
        addstudent.setVisible(true);
    }//GEN-LAST:event_managestudentclassActionPerformed

    private void tablestudentclassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablestudentclassMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_tablestudentclassMouseClicked

    private void importschedulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importschedulesActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooserImport= new JFileChooser();
        jFileChooserImport.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooserImport.addChoosableFileFilter(FileDAL.myFileFilter());
        jFileChooserImport.setAcceptAllFileFilterUsed(true);
        jFileChooserImport.setApproveButtonText("Open");
        int status = jFileChooserImport.showSaveDialog(jFileChooserImport);
        
        boolean statusimporterr=false;
        if (status == JFileChooser.APPROVE_OPTION) {
          File selectedFile = jFileChooserImport.getSelectedFile();
          System.out.println(selectedFile.getPath());
          if(!selectedFile.getName().contains(".csv")){
               //error
               frmerror er= new frmerror();
               er.setStrError(" Has Error when import Students CLass !");
               er.setVisible(true);
               return ;
           }
           Frm0002BLL bll0002= new Frm0002BLL();
           statusimporterr =bll0002.importScheduleClass(selectedFile.getPath());
           if(statusimporterr){
               //error
               frmerror er= new frmerror();
               er.setStrError(" Has Error when import Schedule CLass !");
               er.setVisible(true);
           }else{
               // view student class
               Frm0002BLL frm0002bll = new Frm0002BLL();
               Iterator<ClassRoomDTO> in= Frm0002BLL.getColClassRoom().iterator();
               cbxscheduleclass.removeAllItems();
               while(in.hasNext()){
                    ClassRoomDTO ob=in.next();                   
                    getIntoTableStudentClass(ob.getCollectionSTU());
                    cbxscheduleclass.addItem(ob.getNameroom());
               }
               //All Students Class:
               labelviewscheduleclass.setText("SChedule is Imported:");
                 jScrollPane2.getVerticalScrollBar().setValue(0);
                    jpannelviewpointsubject.setVisible(false);
                    jpannelviewscheduleclass.setVisible(true);
                    jpannelviewstudentclass.setVisible(false);
                    jpannelviewstudentsubject.setVisible(false);
           }
        } else if (status == JFileChooser.CANCEL_OPTION) {
            jFileChooserImport.cancelSelection();
        }
    }//GEN-LAST:event_importschedulesActionPerformed

    private void cbxstudentsubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxstudentsubjectItemStateChanged
        // TODO add your handling code here:
         if(cbxstudentsubject.getSelectedItem() !=  null){
            String nameclass=cbxstudentsubject.getSelectedItem().toString();
            Iterator<SubjectsWithClassroomDTO> in= Frm0002BLL.getColSubPointStuent().iterator();
            while(in.hasNext()){
                try {
                    SubjectsWithClassroomDTO ob=in.next();
                    String name=ob.getNameroom()+"_"+ob.getCodesubject();
                    String aa= new String( ob.getNamesubject().getBytes("UTF-8"), "UTF-8");
                    if(name.equals(nameclass)){
                        labelsubjectstudensuject.setText(aa);
                        labelsubjectstudensuject.setVisible(true);
                        getIntoTableSubjectStudents(ob.getCollectionstudent());
                    }
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(frm0002.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_cbxstudentsubjectItemStateChanged

    private void cbxpointsubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxpointsubjectItemStateChanged
        // TODO add your handling code here:
       if(cbxpointsubject.getSelectedItem() !=  null){
            String nameclass=cbxpointsubject.getSelectedItem().toString();
            Iterator<SubjectsWithClassroomDTO> in= Frm0002BLL.getColSubPointStuent().iterator();
            while(in.hasNext()){
                SubjectsWithClassroomDTO ob=in.next();
                String name=ob.getNameroom()+"_"+ob.getCodesubject();
                if(name.equals(nameclass)){
                    try {
                        labelsubjpoint.setText(new String(ob.getNamesubject().getBytes("UTF-8")));
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(frm0002.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    labelsubjpoint.setVisible(true);
                   getIntoTableSubjectStudents(ob.getCollectionstudent());
                }
            }
        }
    }//GEN-LAST:event_cbxpointsubjectItemStateChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm0002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm0002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm0002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm0002.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm0002().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Edit;
    private javax.swing.JMenu File;
    private javax.swing.JMenu View;
    private javax.swing.JButton btnchangepass;
    private javax.swing.JButton btnlogout;
    private javax.swing.JComboBox<String> cbxpointsubject;
    private javax.swing.JComboBox<String> cbxscheduleclass;
    private javax.swing.JComboBox<String> cbxstudentclass;
    private javax.swing.JComboBox<String> cbxstudentsubject;
    private javax.swing.JMenuItem importStudent;
    private javax.swing.JMenuItem importpoint;
    private javax.swing.JMenuItem importschedules;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanelRoot;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel jpannelviewpointsubject;
    private javax.swing.JPanel jpannelviewscheduleclass;
    private javax.swing.JPanel jpannelviewstudentclass;
    private javax.swing.JPanel jpannelviewstudentsubject;
    private javax.swing.JLabel labelsubjectstudensuject;
    private javax.swing.JLabel labelsubjpoint;
    private javax.swing.JLabel labelviewpointsubject;
    private javax.swing.JLabel labelviewscheduleclass;
    private javax.swing.JLabel labelviewstudentclass;
    private javax.swing.JLabel labelviewstudentsubject;
    private javax.swing.JMenuItem managapointstudent;
    private javax.swing.JMenuItem managastudentsubject;
    private javax.swing.JMenuItem managestudentclass;
    private javax.swing.JTable tablepointsubject;
    private javax.swing.JTable tablescheduleclass;
    private javax.swing.JTable tablestudentclass;
    private javax.swing.JTable tablestudentsubject;
    private javax.swing.JLabel timecurrents;
    private javax.swing.JLabel username;
    private javax.swing.JMenuItem viewpointsubject;
    private javax.swing.JMenuItem viewscheduleclass;
    private javax.swing.JMenuItem viewstudentclass;
    private javax.swing.JMenuItem viewstudentsubject;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the accurent
     */
    public AccountSchoolDTO getAccurent() {
        return accurent;
    }

    /**
     * @param accurent the accurent to set
     */
    public void setAccurent(AccountSchoolDTO accurent) {
        this.accurent = accurent;
    }
    
    void createContent(){
        createCombox();
    }

    void createCombox(){
        // set student class, scheduler class
        Frm0002BLL.getAllClassRoom();
        Iterator<ClassRoomDTO> in= Frm0002BLL.getColClassRoom().iterator();
        Iterator<SubjectsWithClassroomDTO> ins= Frm0002BLL.getColSubPointStuent().iterator();
        cbxstudentclass.removeAllItems();
        cbxscheduleclass.removeAllItems();
        cbxstudentsubject.removeAllItems();
        cbxpointsubject.removeAllItems();
        while(in.hasNext()){
            ClassRoomDTO ob=in.next(); 
            cbxstudentclass.addItem(ob.getNameroom());
            cbxscheduleclass.addItem(ob.getNameroom());
        }
        while(ins.hasNext()){
            SubjectsWithClassroomDTO ob=ins.next();
            String name=ob.getNameroom()+"_"+ob.getCodesubject();
            cbxstudentsubject.addItem(name);
            cbxpointsubject.addItem(name);
        }
    }
    
    void getIntoTableStudentClass(LinkedList<StudentsDTO> col){
        DefaultTableModel model=(DefaultTableModel) tablestudentclass.getModel();
        model.setRowCount(0);
        Iterator<StudentsDTO> in= col.iterator();
        int i=1;
        while(in.hasNext()){
            StudentsDTO stu=in.next();
            Vector vt=new Vector();
            vt.add(i++);
            vt.add(stu.getMssv());
            vt.add(stu.getName());
            vt.add(stu.getSex());
            vt.add(stu.getIdentity());
            model.addRow(vt);
        }
    }
    
    void getIntoTableScheduleClass(LinkedList<SubjectsDTO> col){
        DefaultTableModel model=(DefaultTableModel) tablescheduleclass.getModel();
        model.setRowCount(0);
        if(col == null){
            return;
        }
        Iterator<SubjectsDTO> in= col.iterator();
        int i=1;
        while(in.hasNext()){
            SubjectsDTO stu=in.next();
            Vector vt=new Vector();
            vt.add(i++);
            vt.add(stu.getCodesubject());
            vt.add(stu.getNamesubject());
            vt.add(stu.getRoomstudy());
            model.addRow(vt);
        }
    }
    
    void getIntoTableSubjectStudents(LinkedList<StudentsDTO> col){
        DefaultTableModel model=(DefaultTableModel) tablestudentsubject.getModel();
        model.setRowCount(0);
        Iterator<StudentsDTO> in= col.iterator();
        int i=1;
        while(in.hasNext()){
            StudentsDTO stu=in.next();
            Vector vt=new Vector();
            vt.add(i++);
            vt.add(stu.getMssv());
            vt.add(stu.getName());
            vt.add(stu.getSex());
            vt.add(stu.getIdentity());
            model.addRow(vt);
        }
    }
    
//    void getIntoTableScheduleClass(LinkedList<SubjectsDTO> col){
//         DefaultTableModel model=(DefaultTableModel) tablescheduleclass.getModel();
//        model.setRowCount(0);
//        Iterator<Subjects> in= col.iterator();
//        int i=0;
//        while(in.hasNext()){
//            SubjectsDTO stu=in.next();
//            Vector vt=new Vector();
//            vt.add(i++);
//            vt.add(stu.getCodesubject());
//            vt.add(stu.getNamesubject());
//            vt.add(stu.getNameroomclass());
//            model.addRow(vt);
//        }
//    }
}